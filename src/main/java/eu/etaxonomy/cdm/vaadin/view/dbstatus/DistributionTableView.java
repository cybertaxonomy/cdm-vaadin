package eu.etaxonomy.cdm.vaadin.view.dbstatus;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Container;
import com.vaadin.data.util.BeanItemContainer;
import com.vaadin.data.util.IndexedContainer;
import com.vaadin.navigator.View;
import com.vaadin.navigator.ViewChangeListener.ViewChangeEvent;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.Component;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Field;
import com.vaadin.ui.Table;
import com.vaadin.ui.TableFieldFactory;

import eu.etaxonomy.cdm.model.common.DefinedTermBase;
import eu.etaxonomy.cdm.vaadin.model.DistributionDTO;
import eu.etaxonomy.cdm.vaadin.model.Users;
import eu.etaxonomy.cdm.vaadin.model.taxonDTO;

public class DistributionTableView extends CustomComponent implements IDistributionTableComponent, View, ClickListener{

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/**
     *
     */
    private static final long serialVersionUID = 1L;
    @AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private Table table_1;
	
	private DistributionTableComponentListener listener;
	
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public DistributionTableView() {
		buildMainLayout();
		setCompositionRoot(mainLayout);
		
		
	}

	
	public void dataBinding(){
//		LazyLoadedContainer container = new LazyLoadedContainer(DbTableDTO.class);
		BeanItemContainer<taxonDTO> taxonContainer = new BeanItemContainer<taxonDTO>(taxonDTO.class);
		taxonContainer.addNestedContainerProperty("distribution.name");
		taxonContainer.addNestedContainerProperty("distribution.status");
		BeanItemContainer<DistributionDTO> distContainer = new BeanItemContainer<DistributionDTO>(DistributionDTO.class);
		for(int i = 0; i<100; i++){
			distContainer.addBean(new DistributionDTO("Area"+i, "Status"+i));
		}
		for(int i = 0; i<100; i++){
			taxonContainer.addBean(new taxonDTO("taxon"+i, new DistributionDTO("Area"+i, "Status"+i)));
		}

		Users user = new Users();
		
		table_1.setContainerDataSource(user);
		
//		container.addNestedContainerProperty("dDTO.status");
	}
	
	@Override
	public void addListener(DistributionTableComponentListener listener) {
	   this.listener = listener;
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");

		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");

		// table_1
		table_1 = new Table();
		table_1.setImmediate(false);
		table_1.setWidth("100.0%");
		table_1.setHeight("100.0%");
		mainLayout.addComponent(table_1, "top:0.0px;right:0.0px;");

		return mainLayout;
	}

    /* (non-Javadoc)
     * @see com.vaadin.navigator.View#enter(com.vaadin.navigator.ViewChangeListener.ViewChangeEvent)
     */
    @Override
    public void enter(ViewChangeEvent event) {
        // TODO Auto-generated method stub

    }

    /* (non-Javadoc)
     * @see com.vaadin.ui.Button.ClickListener#buttonClick(com.vaadin.ui.Button.ClickEvent)
     */
    @Override
    public void buttonClick(ClickEvent event) {
        // TODO Auto-generated method stub

    }

}
