// $Id$
/**
* Copyright (C) 2015 EDIT
* European Distributed Institute of Taxonomy
* http://www.e-taxonomy.eu
*
* The contents of this file are subject to the Mozilla Public License Version 1.1
* See LICENSE.TXT at the top of this package for the full license terms.
*/
package eu.etaxonomy.cdm.vaadin.view;

import java.util.UUID;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.navigator.View;
import com.vaadin.navigator.ViewChangeListener.ViewChangeEvent;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;

import eu.etaxonomy.cdm.vaadin.component.ConceptRelationshipComposite;
import eu.etaxonomy.cdm.vaadin.component.StatusComposite;
import eu.etaxonomy.cdm.vaadin.session.BasicEvent;
import eu.etaxonomy.cdm.vaadin.session.IBasicEventListener;
import eu.etaxonomy.cdm.vaadin.util.CdmVaadinSessionUtilities;

/**
 * @author cmathew
 * @date 9 Apr 2015
 *
 */
public class ConceptRelationshipView extends CustomComponent implements View, IBasicEventListener {

    /*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

    @AutoGenerated
    private HorizontalLayout mainLayout;
    @AutoGenerated
    private StatusComposite statusCompositeRight;
    @AutoGenerated
    private ConceptRelationshipComposite conceptRelationshipComposite;
    @AutoGenerated
    private StatusComposite statusCompositeLeft;

    private StatusComposite primaryStatusComposite, secondaryStatusComposite;
    /**
     * The constructor should first build the main layout, set the
     * composition root and then do any custom initialization.
     *
     * The constructor will not be automatically regenerated by the
     * visual editor.
     */
    public ConceptRelationshipView() {

        buildMainLayout();
        setCompositionRoot(mainLayout);

        conceptRelationshipComposite.setView(this);
        conceptRelationshipComposite.setSizeFull();

        setPrimaryStatusComposite(statusCompositeLeft.getSelectedClassificationUuid());

        CdmVaadinSessionUtilities.getCurrentBasicEventService().register(this);
    }

    /* (non-Javadoc)
     * @see com.vaadin.navigator.View#enter(com.vaadin.navigator.ViewChangeListener.ViewChangeEvent)
     */
    @Override
    public void enter(ViewChangeEvent event) {
        // TODO Auto-generated method stub

    }

    public void setPrimaryStatusComposite(UUID scUuid) {
        if(scUuid != null) {
            if(statusCompositeLeft.getSelectedClassificationUuid().equals(scUuid)) {
                primaryStatusComposite = statusCompositeLeft;
                secondaryStatusComposite = statusCompositeRight;
            } else {
                secondaryStatusComposite = statusCompositeLeft;
                primaryStatusComposite = statusCompositeRight;
            }
            secondaryStatusComposite.clearTaxaTableSelections();
        }
    }

    /* (non-Javadoc)
     * @see eu.etaxonomy.cdm.vaadin.session.IBasicEventListener#onAction(eu.etaxonomy.cdm.vaadin.session.BasicEvent)
     */
    @Override
    public void onAction(BasicEvent event) {
       if(event.getEventId().equals(ConceptRelationshipComposite.UPDATE_START_ID)) {
           primaryStatusComposite.setTaxaTableEnabled(false);
           secondaryStatusComposite.setTaxaTableSelectable(false);
       }
       if(event.getEventId().equals(ConceptRelationshipComposite.UPDATE_END_ID)) {
           primaryStatusComposite.setTaxaTableEnabled(true);
           secondaryStatusComposite.setTaxaTableSelectable(true);
       }
    }

    @AutoGenerated
    private HorizontalLayout buildMainLayout() {
        // common part: create layout
        mainLayout = new HorizontalLayout();
        mainLayout.setImmediate(false);
        mainLayout.setWidth("100%");
        mainLayout.setHeight("100%");
        mainLayout.setMargin(true);

        // top-level component properties
        setWidth("100.0%");
        setHeight("100.0%");

        // statusCompositeLeft
        statusCompositeLeft = new StatusComposite();
        statusCompositeLeft.setImmediate(false);
        statusCompositeLeft.setWidth("-1px");
        statusCompositeLeft.setHeight("-1px");
        mainLayout.addComponent(statusCompositeLeft);

        // conceptRelationshipComposite
        conceptRelationshipComposite = new ConceptRelationshipComposite();
        conceptRelationshipComposite.setImmediate(false);
        conceptRelationshipComposite.setWidth("-1px");
        conceptRelationshipComposite.setHeight("-1px");
        mainLayout.addComponent(conceptRelationshipComposite);
        mainLayout.setExpandRatio(conceptRelationshipComposite, 1.0f);
        mainLayout.setComponentAlignment(conceptRelationshipComposite, new Alignment(20));

        // statusCompositeRight
        statusCompositeRight = new StatusComposite();
        statusCompositeRight.setImmediate(false);
        statusCompositeRight.setWidth("-1px");
        statusCompositeRight.setHeight("-1px");
        mainLayout.addComponent(statusCompositeRight);

        return mainLayout;
    }


}
