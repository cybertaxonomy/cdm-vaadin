// $Id$
/**
* Copyright (C) 2015 EDIT
* European Distributed Institute of Taxonomy
* http://www.e-taxonomy.eu
*
* The contents of this file are subject to the Mozilla Public License Version 1.1
* See LICENSE.TXT at the top of this package for the full license terms.
*/
package eu.etaxonomy.cdm.vaadin.component;

import java.sql.SQLException;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.server.FontAwesome;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.VerticalLayout;

import eu.etaxonomy.cdm.vaadin.container.IdUuidName;
import eu.etaxonomy.cdm.vaadin.presenter.EditConceptRelationshipPresenter;

/**
 * @author cmathew
 * @date 13 Apr 2015
 *
 */
public class EditConceptRelationshipComposite extends CustomComponent {

    /*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

    @AutoGenerated
    private VerticalLayout mainLayout;
    @AutoGenerated
    private HorizontalLayout saveCancelHLayout;
    @AutoGenerated
    private Button cancelButton;
    @AutoGenerated
    private Button saveButton;
    @AutoGenerated
    private HorizontalLayout horizontalLayout;
    @AutoGenerated
    private VerticalLayout toTaxonVLayout;
    @AutoGenerated
    private Label toTaxonValue;
    @AutoGenerated
    private Label toTaxonLabeL;
    @AutoGenerated
    private VerticalLayout typeVLayout;
    @AutoGenerated
    private ComboBox conceptRComboBox;
    @AutoGenerated
    private Label typeLabel;
    @AutoGenerated
    private VerticalLayout fromTaxonVLayout;
    @AutoGenerated
    private Label fromTaxonValue;
    @AutoGenerated
    private Label fromTaxonLabel;
    private final EditConceptRelationshipPresenter presenter;

    private final IdUuidName fromTaxonIdUuidName, taxonRTypeIdUuidName, toTaxonIdUuidName;

    private final static String CHOOSE_TREL_TYPE = "Choose Type ...";

    /**
     * The constructor should first build the main layout, set the
     * composition root and then do any custom initialization.
     *
     * The constructor will not be automatically regenerated by the
     * visual editor.
     */
    public EditConceptRelationshipComposite(IdUuidName fromTaxonIdUuidName,
            IdUuidName taxonRTypeIdUuidName,
            IdUuidName toTaxonIdUuidName) {
        buildMainLayout();
        setCompositionRoot(mainLayout);

        this.presenter = new EditConceptRelationshipPresenter();
        this.fromTaxonIdUuidName = fromTaxonIdUuidName;
        this.taxonRTypeIdUuidName = taxonRTypeIdUuidName;
        this.toTaxonIdUuidName = toTaxonIdUuidName;

        init();
    }

    private void init() {
        initConceptRComboBox();
    }

    private void initFromTaxonLabel() {
        fromTaxonLabel.setValue(fromTaxonIdUuidName.getName());
    }

    private void initConceptRComboBox() {
        conceptRComboBox.setImmediate(true);
        try {
            conceptRComboBox.setContainerDataSource(presenter.loadTaxonRelationshipTypeContainer());
        } catch (SQLException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
        if(taxonRTypeIdUuidName == null) {
            conceptRComboBox.setInputPrompt(CHOOSE_TREL_TYPE);
        } else {
            conceptRComboBox.setValue(taxonRTypeIdUuidName.getId());
        }
    }

    private void initToTaxonLabel() {
        if(toTaxonIdUuidName == null) {
            toTaxonValue.setIcon(FontAwesome.QUESTION);
            toTaxonValue.setValue("");
        } else {
            toTaxonValue.setIcon(null);
            toTaxonValue.setValue(toTaxonIdUuidName.getName());
        }
    }

    @AutoGenerated
    private VerticalLayout buildMainLayout() {
        // common part: create layout
        mainLayout = new VerticalLayout();
        mainLayout.setImmediate(false);
        mainLayout.setWidth("640px");
        mainLayout.setHeight("140px");
        mainLayout.setMargin(true);

        // top-level component properties
        setWidth("640px");
        setHeight("140px");

        // horizontalLayout
        horizontalLayout = buildHorizontalLayout();
        mainLayout.addComponent(horizontalLayout);

        // saveCancelHLayout
        saveCancelHLayout = buildSaveCancelHLayout();
        mainLayout.addComponent(saveCancelHLayout);
        mainLayout.setComponentAlignment(saveCancelHLayout, new Alignment(48));

        return mainLayout;
    }

    @AutoGenerated
    private HorizontalLayout buildHorizontalLayout() {
        // common part: create layout
        horizontalLayout = new HorizontalLayout();
        horizontalLayout.setImmediate(false);
        horizontalLayout.setWidth("602px");
        horizontalLayout.setHeight("-1px");
        horizontalLayout.setMargin(true);
        horizontalLayout.setSpacing(true);

        // fromTaxonVLayout
        fromTaxonVLayout = buildFromTaxonVLayout();
        horizontalLayout.addComponent(fromTaxonVLayout);
        horizontalLayout.setComponentAlignment(fromTaxonVLayout, new Alignment(48));

        // typeVLayout
        typeVLayout = buildTypeVLayout();
        horizontalLayout.addComponent(typeVLayout);
        horizontalLayout.setComponentAlignment(typeVLayout, new Alignment(48));

        // toTaxonVLayout
        toTaxonVLayout = buildToTaxonVLayout();
        horizontalLayout.addComponent(toTaxonVLayout);
        horizontalLayout.setComponentAlignment(toTaxonVLayout, new Alignment(48));

        return horizontalLayout;
    }

    @AutoGenerated
    private VerticalLayout buildFromTaxonVLayout() {
        // common part: create layout
        fromTaxonVLayout = new VerticalLayout();
        fromTaxonVLayout.setImmediate(false);
        fromTaxonVLayout.setWidth("-1px");
        fromTaxonVLayout.setHeight("-1px");
        fromTaxonVLayout.setMargin(false);

        // fromTaxonLabel
        fromTaxonLabel = new Label();
        fromTaxonLabel.setImmediate(false);
        fromTaxonLabel.setWidth("-1px");
        fromTaxonLabel.setHeight("-1px");
        fromTaxonLabel.setValue("From Taxon");
        fromTaxonVLayout.addComponent(fromTaxonLabel);
        fromTaxonVLayout.setComponentAlignment(fromTaxonLabel, new Alignment(48));

        // fromTaxonValue
        fromTaxonValue = new Label();
        fromTaxonValue.setImmediate(false);
        fromTaxonValue.setWidth("-1px");
        fromTaxonValue.setHeight("-1px");
        fromTaxonValue.setValue("Taxon Name");
        fromTaxonVLayout.addComponent(fromTaxonValue);
        fromTaxonVLayout.setComponentAlignment(fromTaxonValue, new Alignment(48));

        return fromTaxonVLayout;
    }

    @AutoGenerated
    private VerticalLayout buildTypeVLayout() {
        // common part: create layout
        typeVLayout = new VerticalLayout();
        typeVLayout.setImmediate(false);
        typeVLayout.setWidth("-1px");
        typeVLayout.setHeight("-1px");
        typeVLayout.setMargin(false);

        // typeLabel
        typeLabel = new Label();
        typeLabel.setImmediate(false);
        typeLabel.setWidth("-1px");
        typeLabel.setHeight("-1px");
        typeLabel.setValue("Type");
        typeVLayout.addComponent(typeLabel);
        typeVLayout.setComponentAlignment(typeLabel, new Alignment(48));

        // conceptRComboBox
        conceptRComboBox = new ComboBox();
        conceptRComboBox.setImmediate(false);
        conceptRComboBox.setWidth("-1px");
        conceptRComboBox.setHeight("-1px");
        typeVLayout.addComponent(conceptRComboBox);
        typeVLayout.setComponentAlignment(conceptRComboBox, new Alignment(48));

        return typeVLayout;
    }

    @AutoGenerated
    private VerticalLayout buildToTaxonVLayout() {
        // common part: create layout
        toTaxonVLayout = new VerticalLayout();
        toTaxonVLayout.setImmediate(false);
        toTaxonVLayout.setWidth("-1px");
        toTaxonVLayout.setHeight("-1px");
        toTaxonVLayout.setMargin(false);

        // toTaxonLabeL
        toTaxonLabeL = new Label();
        toTaxonLabeL.setImmediate(false);
        toTaxonLabeL.setWidth("-1px");
        toTaxonLabeL.setHeight("-1px");
        toTaxonLabeL.setValue("To Taxon");
        toTaxonVLayout.addComponent(toTaxonLabeL);
        toTaxonVLayout.setComponentAlignment(toTaxonLabeL, new Alignment(48));

        // toTaxonValue
        toTaxonValue = new Label();
        toTaxonValue.setImmediate(false);
        toTaxonValue.setWidth("-1px");
        toTaxonValue.setHeight("-1px");
        toTaxonValue.setValue("Taxon Name");
        toTaxonVLayout.addComponent(toTaxonValue);
        toTaxonVLayout.setComponentAlignment(toTaxonValue, new Alignment(48));

        return toTaxonVLayout;
    }

    @AutoGenerated
    private HorizontalLayout buildSaveCancelHLayout() {
        // common part: create layout
        saveCancelHLayout = new HorizontalLayout();
        saveCancelHLayout.setImmediate(false);
        saveCancelHLayout.setWidth("-1px");
        saveCancelHLayout.setHeight("-1px");
        saveCancelHLayout.setMargin(false);
        saveCancelHLayout.setSpacing(true);

        // saveButton
        saveButton = new Button();
        saveButton.setCaption("save");
        saveButton.setImmediate(true);
        saveButton.setWidth("-1px");
        saveButton.setHeight("-1px");
        saveCancelHLayout.addComponent(saveButton);

        // cancelButton
        cancelButton = new Button();
        cancelButton.setCaption("cancel");
        cancelButton.setImmediate(true);
        cancelButton.setWidth("-1px");
        cancelButton.setHeight("-1px");
        saveCancelHLayout.addComponent(cancelButton);

        return saveCancelHLayout;
    }

}
