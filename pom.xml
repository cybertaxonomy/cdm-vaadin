<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>eu.etaxonomy</groupId>
  <artifactId>cdm-vaadin</artifactId>
  <packaging>war</packaging>
  <version>4.4.0-SNAPSHOT</version>
  <name>Vaadin Web Application</name>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <vaadin.version>7.6.3</vaadin.version>
    <vaadin.plugin.version>${vaadin.version}</vaadin.plugin.version>
    <cdmlib.version>4.4.0-SNAPSHOT</cdmlib.version>
    <unitils.version>3.4.2</unitils.version>
    <!-- 
        lucene.version must match the version as defined in cdmlib
    -->
    <lucene.version>5.4.1</lucene.version>
    <maven.compiler.source>1.7</maven.compiler.source>
    <maven.compiler.target>1.7</maven.compiler.target>
  </properties>
  <prerequisites>
    <maven>3.0.5</maven>
  </prerequisites>
  <repositories>
    <!-- the cdm internal repository -->
    <repository>
      <id>EditRepository</id>
      <url>http://wp5.e-taxonomy.eu/mavenrepo/</url>
    </repository>
    <!-- current spring source repositories -->
    <repository>
      <id>SpringSource Enterprise Bundle Repository - External Bundle Milestones</id>
      <url>http://repository.springsource.com/maven/bundles/milestone</url>
    </repository>
    <repository>
      <id>SpringSource Enterprise Bundle Repository - SpringSource Bundle Releases</id>
      <url>http://repository.springsource.com/maven/bundles/release</url>
    </repository>
    <repository>
      <id>SpringSource Enterprise Bundle Repository - External Bundle Releases</id>
      <url>http://repository.springsource.com/maven/bundles/external</url>
    </repository>
    <repository>
      <id>vaadin-addons</id>
      <url>http://maven.vaadin.com/vaadin-addons</url>
    </repository>
    <repository>
      <id>vaadin-snapshots</id>
      <url>http://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
  </repositories>
  
  <pluginRepositories>
    <pluginRepository>
      <id>vaadin-snapshots</id>
      <url>http://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </pluginRepository>
  </pluginRepositories>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.vaadin</groupId>
        <artifactId>vaadin-bom</artifactId>
        <version>${vaadin.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>eu.etaxonomy</groupId>
        <artifactId>cdmlib-parent</artifactId>
        <version>${cdmlib.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  
  <distributionManagement>
    <repository>
      <uniqueVersion>false</uniqueVersion>
      <id>wp5.e-taxonomy.eu</id>
      <name>Edit Maven Repository</name>
      <url>scpexe://wp5.e-taxonomy.eu/var/www/wp5.e-taxonomy.eu/mavenrepo/</url>
      <layout>default</layout>
    </repository>
  </distributionManagement>
  
  <profiles>
    <profile>
      <activation>
        <property>
          <name>align-cdmlib-version</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>com.google.code.maven-replacer-plugin</groupId>
            <artifactId>replacer</artifactId>
            <version>1.5.3</version>
            <executions>
              <execution>
                <phase>process-sources</phase>
                <goals>
                  <goal>replace</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <file>pom.xml</file>
              <!-- \u003C = < , \u003E = > -->
              <token>(\u003Ccdmlib\.version\u003E)[^\u003C]*</token>
              <value>$1${project.version}</value>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
  
  <build>
    <resources>
      <resource>
        <!-- replace the place holders like ${...} in datasources.xml -->
        <filtering>true</filtering>
        <directory>src/test/resources</directory>
        <targetPath>../test-classes</targetPath>
        <includes>
          <include>datasources.xml</include>
        </includes>
      </resource>
      <resource>
        <!-- all other test resources without filtering -->
        <directory>src/test/resources</directory>
        <targetPath>../test-classes</targetPath>
        <excludes>
          <exclude>datasources.xml</exclude>
        </excludes>
      </resource>
      <resource>
        <!-- all main resources without filtering -->
        <directory>src/main/resources</directory>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.3</version>
        <configuration>
          <source>${maven.compiler.source}</source>
          <target>${maven.compiler.target}</target>
          <encoding>UTF-8</encoding>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.19.1</version>
        <configuration>
          <argLine>-Xms256m -Xmx512m</argLine>
        </configuration>
      </plugin>
      <!-- As we are doing "inplace" GWT compilation, ensure the widgetset -->
      <!-- directory is cleaned properly -->
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <version>2.4.1</version>
        <configuration>
          <filesets>
            <fileset>
              <directory>src/main/webapp/VAADIN/widgetsets</directory>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.2</version>
        <configuration>
          <failOnMissingWebXml>false</failOnMissingWebXml>
          <warSourceExcludes>WEB-INF/*,WEB-INF/datasources/*</warSourceExcludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.vaadin</groupId>
        <artifactId>vaadin-maven-plugin</artifactId>
        <version>${vaadin.plugin.version}</version>
        <configuration>
          <extraJvmArgs>-Xmx512M -Xss1024k</extraJvmArgs>
          <!-- <runTarget>mobilemail</runTarget> -->
          <!-- We are doing "inplace" but into subdir VAADIN/widgetsets. 
            This way compatible with Vaadin eclipse plugin. -->
          <webappDirectory>${basedir}/src/main/webapp/VAADIN/widgetsets</webappDirectory>
          <hostedWebapp>${basedir}/src/main/webapp/VAADIN/widgetsets</hostedWebapp>
          <!-- Most Vaadin apps don't need this stuff, guide that to target -->
          <persistentunitcachedir>${project.build.directory}</persistentunitcachedir>
          <deploy>${project.build.directory}/gwt-deploy</deploy>
          <!-- Compile report is not typically needed either, saves hunreds 
            of mb disk -->
          <compileReport>false</compileReport>
          <noServer>true</noServer>
          <!-- Remove draftCompile when project is ready -->
          <draftCompile>false</draftCompile>
          <style>OBF</style>
          <strict>true</strict>
          <runTarget>http://localhost:8080/</runTarget>
        </configuration>
        <executions>
          <execution>
            <configuration>
              <!-- if you don't specify any modules, the plugin will find 
                them -->
              <!-- <modules> <module>com.vaadin.demo.mobilemail.gwt.ColorPickerWidgetSet</module> 
                </modules> -->
            </configuration>
            <goals>
              <goal>clean</goal>
              <goal>resources</goal>
              <goal>update-theme</goal>
              <goal>update-widgetset</goal>
              <goal>compile-theme</goal>
              <goal>compile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <version>9.4.0.RC1</version>
        <!--  
            NOTE:
            9.4.0.RC1 requires jdk 1.8, formerly we've been using version 9.1.3.v20140225 which was 
            the last version compatible to java 7, but this was causing other problems related to asm
            which could not be easily solved.
        -->
        <configuration>
          <useTestScope>true</useTestScope>
          <scanIntervalSeconds>2</scanIntervalSeconds>
          <systemProperties>
            <force>true</force>
            <systemProperty>
              <name>cdm.datasource</name>
              <value>h2_cdmTest</value>
            </systemProperty>
            <systemProperty>
              <!-- 
                The lucene index should be placed into the target folder, 
                so user.home needs to be set to this folder. user.home needs to be overridden 
                since it already exists, thus the force option is turned on above 
              -->
              <name>user.home</name>
              <value>${basedir}/target/</value>
            </systemProperty>
            <systemProperty>
              <!-- 
                datasources.xml is prepared by <plugins><resources>..</resources> above 
               -->
              <name>cdm.beanDefinitionFile</name>
              <value>${project.build.directory}/test-classes/datasources.xml</value>
            </systemProperty>
            <systemProperty>
                <name>log4j.configuration</name>
                <value>file:///home/andreas/.cdmLibrary/log4j.properties</value>
            </systemProperty>            
          </systemProperties>
        </configuration>
        <dependencies>
          <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
                <version>1.6.4</version>
            </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>2.17</version>
        <configuration>
          <!-- Remove the skipTests line below to run TestBench tests -->
          <!-- <skipTests>true</skipTests> -->
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>external.atlassian.jgitflow</groupId>
        <artifactId>jgitflow-maven-plugin</artifactId>
        <version>1.0-m6</version>
        <configuration>
          <pushHotfixes>true</pushHotfixes>
          <pushReleases>true</pushReleases>
          <enableSshAgent>true</enableSshAgent>
          <allowSnapshots>true</allowSnapshots>
          <allowUntracked>true</allowUntracked>
        </configuration>
        <dependencies>
          <!-- upgrading dependency jsch.agent.version of jgit-flow plugin 
            to 0.1.53 in order have ssl key exchange algorithms compatible with openssh 
            6.7 -->
          <dependency>
            <groupId>com.jcraft</groupId>
            <artifactId>jsch</artifactId>
            <version>0.1.53</version>
          </dependency>
        </dependencies>
      </plugin>
    </plugins>
    <extensions>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-scm</artifactId>
        <version>1.0-beta-6</version>
      </extension>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-ssh</artifactId>
        <version>1.0-beta-6</version>
      </extension>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-ssh-external</artifactId>
        <version>1.0-beta-6</version>
      </extension>
      <extension>
        <groupId>org.apache.maven.scm</groupId>
        <artifactId>maven-scm-manager-plexus</artifactId>
        <version>1.0</version>
      </extension>
      <extension>
        <groupId>org.apache.maven.scm</groupId>
        <artifactId>maven-scm-provider-svnexe</artifactId>
        <version>1.0</version>
      </extension>
      <!-- WebDAV plugin to upload snapshots -->
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-webdav</artifactId>
        <version>1.0-beta-2</version>
      </extension>
    </extensions>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-eclipse-plugin</artifactId>
          <configuration>
            <wtpversion>2.0</wtpversion>
            <additionalProjectnatures>
              <projectnature>com.vaadin.integration.eclipse.widgetsetNature</projectnature>
            </additionalProjectnatures>
            <additionalBuildcommands>
              <buildcommand>com.vaadin.integration.eclipse.widgetsetBuilder</buildcommand>
              <buildcommand>com.vaadin.integration.eclipse.addonStylesBuilder</buildcommand>
            </additionalBuildcommands>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
  
  <dependencies>
   <!-- ============ Vaadin ============ -->
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-server</artifactId>
    </dependency>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-client-compiled</artifactId>
    </dependency>
    <!-- Needed when using the widgetset optimizer (custom ConnectorBundleLoaderFactory). 
      For widgetset compilation, vaadin-client-compiler is automatically added 
      on the compilation classpath by vaadin-maven-plugin so normally there is 
      no need for an explicit dependency. -->
    <!-- <dependency> <groupId>com.vaadin</groupId> <artifactId>vaadin-client-compiler</artifactId> 
      <version>${vaadin.version}</version> <scope>provided</scope> </dependency> -->
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-client</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- disabling push for the moment because it does not work with run-jetty-run 
      due to the fact that the latest (even nightly) version of run-jetty-run uses 
      9.0.0 M3 which is incompatible with atmoshpere. this does work with the jetty 
      included in this pom which is 9.2.5.xx, implying that enabling the dependency 
      and running the web app via 'mvn jetty:run' works fine. -->
    <!-- <dependency> -->
    <!-- <groupId>com.vaadin</groupId> -->
    <!-- <artifactId>vaadin-push</artifactId> -->
    <!-- <version>${vaadin.version}</version> -->
    <!-- </dependency> -->
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-themes</artifactId>
    </dependency>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-testbench-api</artifactId>
      <version>RELEASE</version>
      <scope>test</scope>
    </dependency>
    <!-- vaadin addons / extensions -->
    <dependency>
      <groupId>org.vaadin.addons</groupId>
      <artifactId>contextmenu</artifactId>
      <version>4.5</version>
    </dependency>
    <!-- ============ cdmlib ============ -->
    <dependency>
      <groupId>eu.etaxonomy</groupId>
      <artifactId>cdmlib-remote</artifactId>
      <scope>compile</scope>
    </dependency>    
    <dependency>
      <groupId>eu.etaxonomy</groupId>
      <artifactId>cdmlib-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>eu.etaxonomy</groupId>
      <artifactId>cdmlib-db</artifactId>
      <version>${cdmlib.version}</version>
      <scope>test</scope>
    </dependency>
    <!-- ============ Other ============ -->
    <!-- 
        to override version number coming with vaadin client 
        version is managed in cdmlib-parent
    -->
    <dependency>
      <groupId>javax.validation</groupId>
      <artifactId>validation-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springmodules</groupId>
      <artifactId>spring-modules-cache</artifactId>
      <version>0.7</version>
      <exclusions>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring-mock</artifactId>
        </exclusion>
      </exclusions>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-mock</artifactId>
      <version>2.0.8</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <!-- Try updating in cdmlib to 20090211 -->
      <groupId>org.json</groupId>
      <artifactId>json</artifactId>
      <version>20151123</version>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <scope>provided</scope>
    </dependency>
  </dependencies>
</project>
