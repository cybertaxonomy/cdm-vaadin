<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>eu.etaxonomy</groupId>
  <artifactId>cdm-vaadin</artifactId>
  <packaging>war</packaging>
  <version>3.5.4-SNAPSHOT</version>
  <name>Vaadin Web Application</name>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <vaadin.version>7.3.5</vaadin.version>
    <vaadin.plugin.version>${vaadin.version}</vaadin.plugin.version>
    <cdmlib.version>3.5.2-SNAPSHOT</cdmlib.version>
    <unitils.version>3.4.2</unitils.version>
    <spring.version>3.2.2.RELEASE</spring.version>
  </properties>
  <repositories>
    <!-- the cdm internal repository -->
    <repository>
      <id>EditRepository</id>
      <url>http://wp5.e-taxonomy.eu/mavenrepo/</url>
    </repository>
    <!-- current spring source repositories -->
    <repository>
      <id>SpringSource Enterprise Bundle Repository - External Bundle Milestones</id>
      <url>http://repository.springsource.com/maven/bundles/milestone</url>
    </repository>
    <repository>
      <id>SpringSource Enterprise Bundle Repository - SpringSource Bundle Releases</id>
      <url>http://repository.springsource.com/maven/bundles/release</url>
    </repository>
    <repository>
      <id>SpringSource Enterprise Bundle Repository - External Bundle Releases</id>
      <url>http://repository.springsource.com/maven/bundles/external</url>
    </repository>
    <repository>
      <id>vaadin-addons</id>
      <url>http://maven.vaadin.com/vaadin-addons</url>
    </repository>
    <repository>
      <id>vaadin-snapshots</id>
      <url>http://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <id>vaadin-snapshots</id>
      <url>http://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </pluginRepository>
  </pluginRepositories>
  <distributionManagement>
    <repository>
      <uniqueVersion>false</uniqueVersion>
      <id>wp5.e-taxonomy.eu</id>
      <name>Edit Maven Repository</name>
      <url>scpexe://wp5.e-taxonomy.eu/var/www/wp5.e-taxonomy.eu/mavenrepo/</url>
      <layout>default</layout>
    </repository>
  </distributionManagement>
  <dependencies>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-server</artifactId>
      <version>${vaadin.version}</version>
    </dependency>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-client-compiled</artifactId>
      <version>${vaadin.version}</version>
    </dependency>
    <!-- Needed when using the widgetset optimizer (custom ConnectorBundleLoaderFactory). 
      For widgetset compilation, vaadin-client-compiler is automatically added 
      on the compilation classpath by vaadin-maven-plugin so normally there is 
      no need for an explicit dependency. -->
    <!-- <dependency> <groupId>com.vaadin</groupId> <artifactId>vaadin-client-compiler</artifactId> 
      <version>${vaadin.version}</version> <scope>provided</scope> </dependency> -->
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-client</artifactId>
      <version>${vaadin.version}</version>
      <scope>provided</scope>
    </dependency>
    <!-- disabling push for the moment because it does not work with run-jetty-run 
      due to the fact that the latest (even nightly) version of run-jetty-run uses 
      9.0.0 M3 which is incompatible with atmoshpere. this does work with the jetty 
      included in this pom which is 9.2.5.xx, implying that enabling the dependency 
      and running the web app via 'mvn jetty:run' works fine. -->
    <!-- <dependency> -->
    <!-- <groupId>com.vaadin</groupId> -->
    <!-- <artifactId>vaadin-push</artifactId> -->
    <!-- <version>${vaadin.version}</version> -->
    <!-- </dependency> -->
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-themes</artifactId>
      <version>${vaadin.version}</version>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>3.1.0</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-testbench-api</artifactId>
      <version>RELEASE</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>eu.etaxonomy</groupId>
      <artifactId>cdmlib-services</artifactId>
      <version>${cdmlib.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>eu.etaxonomy</groupId>
      <artifactId>cdmlib-model</artifactId>
      <version>${cdmlib.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>eu.etaxonomy</groupId>
      <artifactId>cdmlib-persistence</artifactId>
      <type>test-jar</type>
      <scope>test</scope>
      <version>${cdmlib.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springmodules</groupId>
      <artifactId>spring-modules-cache</artifactId>
      <version>0.7</version>
      <exclusions>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring-mock</artifactId>
        </exclusion>
      </exclusions>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.thoughtworks.xstream</groupId>
      <artifactId>xstream</artifactId>
      <version>1.4.4</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-mock</artifactId>
      <version>2.0.8</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context-support</artifactId>
      <version>${spring.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>org.springframework.web</artifactId>
      <version>${spring.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>org.springframework.web.servlet</artifactId>
      <version>${spring.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
    <!-- vaadin addons / extensions -->
    <dependency>
      <groupId>org.vaadin.addons</groupId>
      <artifactId>contextmenu</artifactId>
      <version>4.5</version>
    </dependency>
    <!-- unitils dependencies - start -->
    <dependency>
      <groupId>org.unitils</groupId>
      <artifactId>unitils-core</artifactId>
      <version>${unitils.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.unitils</groupId>
      <artifactId>unitils-database</artifactId>
      <version>${unitils.version}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring-jdbc</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.unitils</groupId>
      <artifactId>unitils-dbmaintainer</artifactId>
      <version>${unitils.version}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.hibernate</groupId>
          <artifactId>hibernate</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.unitils</groupId>
      <artifactId>unitils-dbunit</artifactId>
      <version>${unitils.version}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring-core</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring-jdbc</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring-beans</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.unitils</groupId>
      <artifactId>unitils-easymock</artifactId>
      <version>${unitils.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.unitils</groupId>
      <artifactId>unitils-mock</artifactId>
      <version>${unitils.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.unitils</groupId>
      <artifactId>unitils-inject</artifactId>
      <version>${unitils.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.unitils</groupId>
      <artifactId>unitils-orm</artifactId>
      <version>${unitils.version}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring-context</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring-orm</artifactId>
        </exclusion>
        <exclusion>
          <groupId>javax.persistence</groupId>
          <artifactId>persistence-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.unitils</groupId>
      <artifactId>unitils-spring</artifactId>
      <version>${unitils.version}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring-core</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring-context</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring-beans</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring-test</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring-tx</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.easymock</groupId>
      <artifactId>easymock</artifactId>
      <version>3.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>xmlunit</groupId>
      <artifactId>xmlunit</artifactId>
      <version>1.4</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.dbunit</groupId>
      <artifactId>dbunit</artifactId>
      <version>2.4.9</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>commons-dbcp</groupId>
      <artifactId>commons-dbcp</artifactId>
      <version>1.4</version>
      <scope>test</scope>
    </dependency>
    <!-- unitils dependencies - end -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>1.7.2</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.7.2</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>p6spy</groupId>
      <artifactId>p6spy</artifactId>
      <version>2.1.3</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.3</version>
        <configuration>
          <source>1.7</source>
          <target>1.7</target>
          <encoding>UTF-8</encoding>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <argLine>-Xms256m -Xmx512m</argLine>
        </configuration>
      </plugin>
      <!-- As we are doing "inplace" GWT compilation, ensure the widgetset -->
      <!-- directory is cleaned properly -->
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <version>2.4.1</version>
        <configuration>
          <filesets>
            <fileset>
              <directory>src/main/webapp/VAADIN/widgetsets</directory>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.2</version>
        <configuration>
          <failOnMissingWebXml>false</failOnMissingWebXml>
          <warSourceExcludes>WEB-INF/*,WEB-INF/datasources/*</warSourceExcludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.vaadin</groupId>
        <artifactId>vaadin-maven-plugin</artifactId>
        <version>${vaadin.plugin.version}</version>
        <configuration>
          <extraJvmArgs>-Xmx512M -Xss1024k</extraJvmArgs>
          <!-- <runTarget>mobilemail</runTarget> -->
          <!-- We are doing "inplace" but into subdir VAADIN/widgetsets. 
            This way compatible with Vaadin eclipse plugin. -->
          <webappDirectory>${basedir}/src/main/webapp/VAADIN/widgetsets
          </webappDirectory>
          <hostedWebapp>${basedir}/src/main/webapp/VAADIN/widgetsets
          </hostedWebapp>
          <!-- Most Vaadin apps don't need this stuff, guide that to target -->
          <persistentunitcachedir>${project.build.directory}</persistentunitcachedir>
          <deploy>${project.build.directory}/gwt-deploy</deploy>
          <!-- Compile report is not typically needed either, saves hunreds 
            of mb disk -->
          <compileReport>false</compileReport>
          <noServer>true</noServer>
          <!-- Remove draftCompile when project is ready -->
          <draftCompile>false</draftCompile>
          <style>OBF</style>
          <strict>true</strict>
          <runTarget>http://localhost:8080/</runTarget>
        </configuration>
        <executions>
          <execution>
            <configuration>
              <!-- if you don't specify any modules, the plugin will find 
                them -->
              <!-- <modules> <module>com.vaadin.demo.mobilemail.gwt.ColorPickerWidgetSet</module> 
                </modules> -->
            </configuration>
            <goals>
              <goal>clean</goal>
              <goal>resources</goal>
              <goal>update-theme</goal>
              <goal>update-widgetset</goal>
              <goal>compile-theme</goal>
              <goal>compile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- <plugin> -->
      <!-- <groupId>org.eclipse.jetty</groupId> -->
      <!-- <artifactId>jetty-maven-plugin</artifactId> -->
      <!-- <version>9.2.3.v20140905</version> -->
      <!-- <configuration> -->
      <!-- <scanIntervalSeconds>10</scanIntervalSeconds> -->
      <!-- <stopPort>8005</stopPort> -->
      <!-- <stopKey>STOP</stopKey> -->
      <!-- <useProvidedScope>true</useProvidedScope> -->
      <!-- <webApp> -->
      <!-- <descriptor>${project.basedir}/src/main/webapp/WEB-INF/web.xml</descriptor> -->
      <!-- </webApp> -->
      <!-- </configuration> -->
      <!-- <executions> -->
      <!-- <execution> -->
      <!-- <id>start-jetty</id> -->
      <!-- <phase>pre-integration-test</phase> -->
      <!-- <goals> -->
      <!-- <goal>start</goal> -->
      <!-- </goals> -->
      <!-- <configuration> -->
      <!-- <scanIntervalSeconds>0</scanIntervalSeconds> -->
      <!-- <daemon>true</daemon> -->
      <!-- </configuration> -->
      <!-- </execution> -->
      <!-- <execution> -->
      <!-- <id>stop-jetty</id> -->
      <!-- <phase>post-integration-test</phase> -->
      <!-- <goals> -->
      <!-- <goal>stop</goal> -->
      <!-- </goals> -->
      <!-- </execution> -->
      <!-- </executions> -->
      <!-- </plugin> -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>2.17</version>
        <configuration>
          <!-- Remove the skipTests line below to run TestBench tests -->
          <!-- <skipTests>true</skipTests> -->
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>external.atlassian.jgitflow</groupId>
        <artifactId>jgitflow-maven-plugin</artifactId>
        <version>1.0-m4.3</version>
        <configuration>          
          <pushHotfixes>true</pushHotfixes>
          <pushReleases>true</pushReleases>
          <enableSshAgent>true</enableSshAgent>
          <allowSnapshots>true</allowSnapshots>
          <allowUntracked>true</allowUntracked>
        </configuration>
      </plugin>
    </plugins>
    <extensions>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-scm</artifactId>
        <version>1.0-beta-6</version>
      </extension>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-ssh</artifactId>
        <version>1.0-beta-6</version>
      </extension>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-ssh-external</artifactId>
        <version>1.0-beta-6</version>
      </extension>
      <extension>
        <groupId>org.apache.maven.scm</groupId>
        <artifactId>maven-scm-manager-plexus</artifactId>
        <version>1.0</version>
      </extension>
      <extension>
        <groupId>org.apache.maven.scm</groupId>
        <artifactId>maven-scm-provider-svnexe</artifactId>
        <version>1.0</version>
      </extension>
      <!-- WebDAV plugin to upload snapshots -->
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-webdav</artifactId>
        <version>1.0-beta-2</version>
      </extension>
    </extensions>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-eclipse-plugin</artifactId>
          <configuration>
            <wtpversion>2.0</wtpversion>
            <additionalProjectnatures>
              <projectnature>com.vaadin.integration.eclipse.widgetsetNature</projectnature>
            </additionalProjectnatures>
            <additionalBuildcommands>
              <buildcommand>com.vaadin.integration.eclipse.widgetsetBuilder</buildcommand>
              <buildcommand>com.vaadin.integration.eclipse.addonStylesBuilder</buildcommand>
            </additionalBuildcommands>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
